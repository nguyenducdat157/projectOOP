/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import connection.ClinicDAO;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import model.ThaiKi;

/**
 *
 * @author Admin
 */
public class FrameSuaTTThaiKi extends javax.swing.JFrame implements ActionListener{

    /**
     * Creates new form FrameSuaTTThaiKi
     */
    public FrameSuaTTThaiKi(int ThaiKiID) {
        initComponents();
        setLocationRelativeTo(null);
        ThaiKi tk = new ClinicDAO().getThaiKiByID(ThaiKiID);
        jTextFieldID.setText("" + tk.getIDPatient());
        jTextFieldTGMangThai.setText(String.valueOf(tk.getThoiGianMangThai()));
        jTextFieldCanNang.setText(String.valueOf(tk.getWeight()));
        jTextFieldNgayKhamGanNhat.setText(new SimpleDateFormat("dd/MM/yyyy").format(tk.getNearestExaminationDate()));
        jTextFieldNgayTaiKham.setText(new SimpleDateFormat("dd/MM/yyyy").format(tk.getReExaminationDate()));
        jButtonExit.addActionListener(this);
        jButtonReset.addActionListener(this);
        jButtonEdit.addActionListener(this);
        labelShowErrorTGMangThai.setText("");
        labelErrorNgayKhamGanNhat.setText("");
        labelErrorNgayTaiKham.setText("");
        labelErrorCanNang.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonExit = new javax.swing.JButton();
        jButtonReset = new javax.swing.JButton();
        jButtonEdit = new javax.swing.JButton();
        jLabelThaiKi = new javax.swing.JLabel();
        jLabelIDBenhNhan = new javax.swing.JLabel();
        jTextFieldID = new javax.swing.JTextField();
        jLabelNgayKhamGanNhat = new javax.swing.JLabel();
        jTextFieldTGMangThai = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldNgayKhamGanNhat = new javax.swing.JTextField();
        jLabelNgayTaiKham = new javax.swing.JLabel();
        jTextFieldNgayTaiKham = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldCanNang = new javax.swing.JTextField();
        labelShowErrorTGMangThai = new javax.swing.JLabel();
        labelErrorNgayKhamGanNhat = new javax.swing.JLabel();
        labelErrorNgayTaiKham = new javax.swing.JLabel();
        labelErrorCanNang = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1000, 800));
        setResizable(false);
        getContentPane().setLayout(null);

        jButtonExit.setBackground(new java.awt.Color(0, 153, 102));
        jButtonExit.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonExit.setForeground(new java.awt.Color(255, 255, 255));
        jButtonExit.setText("Quay lại");
        jButtonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonExit);
        jButtonExit.setBounds(240, 700, 120, 40);

        jButtonReset.setBackground(new java.awt.Color(0, 153, 102));
        jButtonReset.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonReset.setForeground(new java.awt.Color(255, 255, 255));
        jButtonReset.setText("Làm mới");
        getContentPane().add(jButtonReset);
        jButtonReset.setBounds(440, 700, 110, 40);

        jButtonEdit.setBackground(new java.awt.Color(0, 153, 102));
        jButtonEdit.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonEdit.setForeground(new java.awt.Color(255, 255, 255));
        jButtonEdit.setText("Sửa");
        getContentPane().add(jButtonEdit);
        jButtonEdit.setBounds(620, 700, 110, 40);

        jLabelThaiKi.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelThaiKi.setText("    SỬA THÔNG TIN THAI KÌ");
        getContentPane().add(jLabelThaiKi);
        jLabelThaiKi.setBounds(260, 10, 360, 34);

        jLabelIDBenhNhan.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelIDBenhNhan.setText("ID Bệnh Nhân");
        getContentPane().add(jLabelIDBenhNhan);
        jLabelIDBenhNhan.setBounds(40, 120, 135, 17);

        jTextFieldID.setEnabled(false);
        getContentPane().add(jTextFieldID);
        jTextFieldID.setBounds(257, 110, 390, 30);

        jLabelNgayKhamGanNhat.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelNgayKhamGanNhat.setText("Thời gian mang thai (tháng) ");
        getContentPane().add(jLabelNgayKhamGanNhat);
        jLabelNgayKhamGanNhat.setBounds(40, 210, 174, 17);
        getContentPane().add(jTextFieldTGMangThai);
        jTextFieldTGMangThai.setBounds(260, 200, 390, 30);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Ngày khám gần nhất");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(50, 320, 129, 17);
        getContentPane().add(jTextFieldNgayKhamGanNhat);
        jTextFieldNgayKhamGanNhat.setBounds(260, 310, 390, 30);

        jLabelNgayTaiKham.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelNgayTaiKham.setText("Ngày tái khám");
        getContentPane().add(jLabelNgayTaiKham);
        jLabelNgayTaiKham.setBounds(70, 460, 88, 17);
        getContentPane().add(jTextFieldNgayTaiKham);
        jTextFieldNgayTaiKham.setBounds(260, 450, 390, 30);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Cân nặng");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(70, 590, 59, 17);
        getContentPane().add(jTextFieldCanNang);
        jTextFieldCanNang.setBounds(260, 580, 390, 30);

        labelShowErrorTGMangThai.setForeground(new java.awt.Color(255, 51, 51));
        labelShowErrorTGMangThai.setText("jLabel3");
        getContentPane().add(labelShowErrorTGMangThai);
        labelShowErrorTGMangThai.setBounds(260, 240, 300, 14);

        labelErrorNgayKhamGanNhat.setForeground(new java.awt.Color(255, 0, 0));
        labelErrorNgayKhamGanNhat.setText("jLabel3");
        getContentPane().add(labelErrorNgayKhamGanNhat);
        labelErrorNgayKhamGanNhat.setBounds(260, 350, 300, 14);

        labelErrorNgayTaiKham.setForeground(new java.awt.Color(255, 51, 51));
        labelErrorNgayTaiKham.setText("jLabel3");
        getContentPane().add(labelErrorNgayTaiKham);
        labelErrorNgayTaiKham.setBounds(260, 490, 300, 14);

        labelErrorCanNang.setForeground(new java.awt.Color(255, 51, 51));
        labelErrorCanNang.setText("jLabel3");
        getContentPane().add(labelErrorCanNang);
        labelErrorCanNang.setBounds(260, 620, 300, 14);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/48360123_1946174842344109_3833490493317054464_n.png"))); // NOI18N
        jLabel3.setText("jLabel3");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(0, 0, 1000, 800);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonExitActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(FrameSuaTTThaiKi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(FrameSuaTTThaiKi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(FrameSuaTTThaiKi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(FrameSuaTTThaiKi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new FrameSuaTTThaiKi().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonEdit;
    private javax.swing.JButton jButtonExit;
    private javax.swing.JButton jButtonReset;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelIDBenhNhan;
    private javax.swing.JLabel jLabelNgayKhamGanNhat;
    private javax.swing.JLabel jLabelNgayTaiKham;
    private javax.swing.JLabel jLabelThaiKi;
    private javax.swing.JTextField jTextFieldCanNang;
    private javax.swing.JTextField jTextFieldID;
    private javax.swing.JTextField jTextFieldNgayKhamGanNhat;
    private javax.swing.JTextField jTextFieldNgayTaiKham;
    private javax.swing.JTextField jTextFieldTGMangThai;
    private javax.swing.JLabel labelErrorCanNang;
    private javax.swing.JLabel labelErrorNgayKhamGanNhat;
    private javax.swing.JLabel labelErrorNgayTaiKham;
    private javax.swing.JLabel labelShowErrorTGMangThai;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        if(e.getSource().equals(jButtonEdit)){
            btnEditClick();
        }
        else if(e.getSource().equals(jButtonExit)){
            btnQuayLaiClick();
        }
        else {
            btnLamMoiClick();
        }
    }
    public void  btnEditClick(){
        ThaiKi tk = new ThaiKi();
        labelShowErrorTGMangThai.setText("");
        labelErrorNgayKhamGanNhat.setText("");
        labelErrorNgayTaiKham.setText("");
        labelErrorCanNang.setText("");
        try {
            boolean test = true;
            try {
            int thoiGianMangThai = Integer.parseInt(jTextFieldTGMangThai.getText());
            if(thoiGianMangThai<0||thoiGianMangThai>10){
                labelShowErrorTGMangThai.setText("Thời gian mang thai không hợp lệ");
                test = false;
            }
            else tk.setThoiGianMangThai(thoiGianMangThai);
            } catch (NumberFormatException e) {
                labelShowErrorTGMangThai.setText("Thời gian mang thai không hợp lệ");
                test = false;
            }
            
            try {
                float canNhang = Float.parseFloat(jTextFieldCanNang.getText());
                if (canNhang < 0) {
                    labelErrorCanNang.setText("Cân nặng không hợp lệ");
                    test = false;
                } else {
                    tk.setWeight(Float.parseFloat(jTextFieldCanNang.getText()));
                }
            } catch (NumberFormatException e) {
                labelErrorCanNang.setText("Chiều cao, cân nặng phải là một số");
                test = false;
            }
            if (testDate(jTextFieldNgayKhamGanNhat.getText())) { // nếu ngày đúng định dạng
                tk.setNearestExaminationDate(new SimpleDateFormat("dd/MM/yyyy").parse(jTextFieldNgayKhamGanNhat.getText())); // thiết lập ngày sinh
                    
            }
            else{
                labelErrorNgayKhamGanNhat.setText("Ngày tháng phải nhập theo định dạng dd/MM/yyyy");
                test = false;
            }
            if (testDate(jTextFieldNgayTaiKham.getText())) { // nếu ngày đúng định dạng
                 tk.setReExaminationDate(new SimpleDateFormat("dd/MM/yyyy").parse(jTextFieldNgayTaiKham.getText()));
            }
            else{
                labelErrorNgayTaiKham.setText("Ngày tháng phải nhập theo định dạng dd/MM/yyyy");
                test = false;
            }
            if(testDate(jTextFieldNgayKhamGanNhat.getText())&&testDate(jTextFieldNgayTaiKham.getText())){ // nếu ngày khám gần nhất và ngày tái khám đã hợp lệ
            if(new SimpleDateFormat("dd/MM/yyyy").parse(jTextFieldNgayTaiKham.getText()) // thì so sánh 2 ngày với nhau
                    .before(new SimpleDateFormat("dd/MM/yyyy").parse(jTextFieldNgayKhamGanNhat.getText()))){
                test = false;
                JOptionPane.showMessageDialog(rootPane, "Ngày tái khám phải sau ngày khám gần nhất"
                    + "", "Lỗi: ", JOptionPane.ERROR_MESSAGE);    
            }}
            if (test) {
                if (new ClinicDAO().UpdateThaiKi(tk)) {
                JOptionPane.showMessageDialog(rootPane, "Sửa thành công!");
            }  
            }
             
        } catch (Exception e) {
        }
    }
    public void btnQuayLaiClick(){
        new FrameXemThongTinThaiKi().setVisible(true);
        this.dispose();
    }
    
    public void   btnLamMoiClick(){
        jTextFieldTGMangThai.setText("");
        jTextFieldCanNang.setText("");
        jTextFieldNgayKhamGanNhat.setText("");
        jTextFieldNgayTaiKham.setText("");       
    }
    public boolean testDate(String str){
        String patternDate = "[0-9]{2}/[0-9]{2}/[0-9]{4}"; // định dạng cua ngày sinh dd/MM/yyyy
                if (str.matches(patternDate)) { // kiểm tra xem nhày sinh nhập vào có đúng định dạng không
                    String date = str.substring(0, 2); // lấy ngày
                    String month = str.substring(3, 5); // lấy tháng
                    String year = str.substring(6, 10); // lấy năm
                    int dateNumber = Integer.parseInt(date); // chuyển ngày sang kiểu Int
                    int monthNumber = Integer.parseInt(month);
                    int yearNumber = Integer.parseInt(year);
                    if(monthNumber<0||monthNumber>12||dateNumber<0||dateNumber>31){ // nếu tháng > 12 hoặc <0 hoặc ngày < 0 hoặc ngày > 31 thì ngày sinh không hợp lệ
                        labelErrorNgayKhamGanNhat.setText("Ngày tháng không hợp lệ");
                       return  false;
                    }
                    else{
                        if(monthNumber==4||monthNumber==6||monthNumber==9||monthNumber==11) // nếu là tháng có 30 ngày
                        {
                            if(dateNumber==31){ // ngày = 31 không hợp lệ
                                labelErrorNgayKhamGanNhat.setText("Ngày tháng không hợp lệ");
                              return false;
                            }
                        }
                        if(monthNumber==2){ // nếu là tháng 2
                            if (!((yearNumber % 4 == 0 && yearNumber % 100 != 0) || (yearNumber % 400 == 0))){ // nếu không phải năm nhuận
                                if(dateNumber>=29){ // nếu xuất hiện ngày 29/2 trong năm không phải năm nhuận
                                labelErrorNgayKhamGanNhat.setText("Ngày tháng không hợp lệ");
                               return false;
                                }
                            }
                            else{ // nếu là năm nhuận
                                if (dateNumber>29) { // tháng 2 có thể có ngày 29
                                labelErrorNgayKhamGanNhat.setText("Ngày tháng không hợp lệ");
                               return false;
                                }
                            }
                        }
                    }
                     
                } else { // else if (jTextFieldNgaySinh.getText().matches(patternDate))
                   labelErrorNgayKhamGanNhat.setText("Ngày tháng phải nhập theo định dạng dd/MM/yyyy");
                   return false;
                }
                return true;
    }
}
