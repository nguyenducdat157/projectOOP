package UI;

import connection.ClinicDAO;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.HistoryOfVaccination;
import model.Patient;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Admin
 */
public class FrameLichSuTiemChung extends javax.swing.JFrame {

    /**
     * Creates new form FrameLichSuTiemChung
     */
    private DefaultTableModel tblModel;

    public FrameLichSuTiemChung() {
        initComponents();
        setLocationRelativeTo(null);
        ArrayList<Patient> listPatient = new ClinicDAO().getAllPatient(); // lấy ra list bệnh nhân
        ArrayList<HistoryOfVaccination> listLSTC = new ClinicDAO().getAllHistoryOfVaccinations(); // lấy ra list lstc
        setTableDate(listPatient, listLSTC); // thiết lập bảng thông tin lstc từ 2 list trên
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableLSTC = new javax.swing.JTable();
        jButtonExit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButtonNhacNho = new javax.swing.JButton();
        jButtonEdit = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldSearch = new javax.swing.JTextField();
        jbuttonSearch = new javax.swing.JButton();
        JbuttonShowAll = new javax.swing.JButton();
        jButtonThemLSTC = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Lịch sử tiêm chủng");
        setMinimumSize(new java.awt.Dimension(1000, 800));
        setResizable(false);
        getContentPane().setLayout(null);

        jTableLSTC.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Ngày Tiêm", "Loại Vacxin", "Số lô", "ID Bệnh nhân", "Bệnh Nhân", "Phản ứng sau tiêm", "ID phòng khám"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableLSTC);
        if (jTableLSTC.getColumnModel().getColumnCount() > 0) {
            jTableLSTC.getColumnModel().getColumn(0).setResizable(false);
            jTableLSTC.getColumnModel().getColumn(0).setPreferredWidth(5);
            jTableLSTC.getColumnModel().getColumn(1).setResizable(false);
            jTableLSTC.getColumnModel().getColumn(1).setPreferredWidth(45);
            jTableLSTC.getColumnModel().getColumn(2).setResizable(false);
            jTableLSTC.getColumnModel().getColumn(3).setResizable(false);
            jTableLSTC.getColumnModel().getColumn(4).setResizable(false);
            jTableLSTC.getColumnModel().getColumn(4).setPreferredWidth(40);
            jTableLSTC.getColumnModel().getColumn(5).setResizable(false);
            jTableLSTC.getColumnModel().getColumn(5).setPreferredWidth(80);
            jTableLSTC.getColumnModel().getColumn(6).setResizable(false);
            jTableLSTC.getColumnModel().getColumn(7).setResizable(false);
            jTableLSTC.getColumnModel().getColumn(7).setPreferredWidth(50);
        }

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(0, 89, 1000, 570);

        jButtonExit.setBackground(new java.awt.Color(0, 153, 102));
        jButtonExit.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonExit.setForeground(new java.awt.Color(255, 255, 255));
        jButtonExit.setText("Quay lại");
        jButtonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonExit);
        jButtonExit.setBounds(30, 700, 81, 54);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("LỊCH SỬ TIÊM CHỦNG ");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(353, 11, 274, 29);

        jButtonNhacNho.setBackground(new java.awt.Color(0, 153, 102));
        jButtonNhacNho.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonNhacNho.setForeground(new java.awt.Color(255, 255, 255));
        jButtonNhacNho.setText("Nhắc nhở phụ huynh lịch khám");
        jButtonNhacNho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNhacNhoActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonNhacNho);
        jButtonNhacNho.setBounds(120, 700, 225, 54);

        jButtonEdit.setBackground(new java.awt.Color(0, 153, 102));
        jButtonEdit.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonEdit.setForeground(new java.awt.Color(255, 255, 255));
        jButtonEdit.setText("Sửa lịch sử tiêm chủng");
        jButtonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonEdit);
        jButtonEdit.setBounds(360, 700, 209, 54);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Nhập họ tên bệnh nhân: ");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(136, 55, 165, 20);
        getContentPane().add(jTextFieldSearch);
        jTextFieldSearch.setBounds(332, 52, 360, 30);

        jbuttonSearch.setBackground(new java.awt.Color(0, 153, 102));
        jbuttonSearch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jbuttonSearch.setForeground(new java.awt.Color(255, 255, 255));
        jbuttonSearch.setText("TÌM KIẾM");
        jbuttonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbuttonSearchActionPerformed(evt);
            }
        });
        getContentPane().add(jbuttonSearch);
        jbuttonSearch.setBounds(730, 50, 90, 30);

        JbuttonShowAll.setBackground(new java.awt.Color(0, 153, 102));
        JbuttonShowAll.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        JbuttonShowAll.setForeground(new java.awt.Color(255, 255, 255));
        JbuttonShowAll.setText("HIỆN TẤT CẢ");
        JbuttonShowAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JbuttonShowAllActionPerformed(evt);
            }
        });
        getContentPane().add(JbuttonShowAll);
        JbuttonShowAll.setBounds(800, 700, 125, 54);

        jButtonThemLSTC.setBackground(new java.awt.Color(0, 153, 102));
        jButtonThemLSTC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonThemLSTC.setForeground(new java.awt.Color(255, 255, 255));
        jButtonThemLSTC.setText("Thêm lịch sử tiêm chủng");
        jButtonThemLSTC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonThemLSTCActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonThemLSTC);
        jButtonThemLSTC.setBounds(590, 700, 194, 54);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/48360123_1946174842344109_3833490493317054464_n.png"))); // NOI18N
        jLabel3.setText("jLabel3");
        jLabel3.setMinimumSize(new java.awt.Dimension(1000, 800));
        jLabel3.setPreferredSize(new java.awt.Dimension(1000, 800));
        getContentPane().add(jLabel3);
        jLabel3.setBounds(0, 0, 1000, 800);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExitActionPerformed

        // TODO add your handling code here:
        new FrameXemThongTin().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButtonExitActionPerformed

    private void jButtonNhacNhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNhacNhoActionPerformed
        int row = jTableLSTC.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(rootPane, "Vui lòng chọn bệnh nhân trước"
                    + "", "Lỗi: ", JOptionPane.ERROR_MESSAGE);
        } else {
            int cofirm = JOptionPane.showConfirmDialog(rootPane, ""
                    + "Gửi email đến người thân của trẻ?");
            if (cofirm == JOptionPane.YES_OPTION) {
                JOptionPane.showMessageDialog(rootPane, "Gửi thành công!");
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonNhacNhoActionPerformed

    private void jButtonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditActionPerformed
        int row = jTableLSTC.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(rootPane, "Vui lòng chọn bệnh nhân trước"
                    + "", "Lỗi: ", JOptionPane.ERROR_MESSAGE);
        } else {
            int LSTiemChungID = Integer.valueOf(String.valueOf(jTableLSTC.getValueAt(row, 0)));
            ArrayList<HistoryOfVaccination> listLSTC = new ClinicDAO().getAllHistoryOfVaccinations();

            int idEdit = listLSTC.get(row).getID();
            new FrameSuaLSTiemChung(idEdit).setVisible(true);
            this.dispose();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonEditActionPerformed

    private void jbuttonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbuttonSearchActionPerformed
        ArrayList<Patient> list = new ArrayList<>();
        String name  = jTextFieldSearch.getText().trim();
        list = new ClinicDAO().getPatientByName(name);
        ArrayList<HistoryOfVaccination> listLSTC = new ArrayList<>();
        ArrayList<Patient> listChildren = new ArrayList<>();
        for (Patient patient : list) {
            if (patient.getKindOfPatient().equals("Trẻ em")) {
                listChildren.add(patient);
            }
        }
        for (int i = 0; i < listChildren.size(); i++) {
           ArrayList<HistoryOfVaccination> list1 = new ClinicDAO().getLSTiemChungByIDPatient(listChildren.get(i).getID());
            for (HistoryOfVaccination historyOfVaccination : list1) {
                listLSTC.add(historyOfVaccination);
            }
        }
        if (listChildren.size()<1) {
            JOptionPane.showMessageDialog(rootPane, "Không có bệnh nhân thỏa mãn!");
        }
        else{
            tblModel = (DefaultTableModel) jTableLSTC.getModel();
            tblModel.setRowCount(0);
            for (int i = 0; i < listLSTC.size(); i++) {
                Patient p = new ClinicDAO().getPatientByID(listLSTC.get(i).getIDPatient());
                tblModel.addRow(new Object[]{listLSTC.get(i).getID(), listLSTC.get(i).getInjectionDate(),
                listLSTC.get(i).getKindOfVaccin(),listLSTC.get(i).getSoLo(), 
                listLSTC.get(i).getIDPatient(), p.getName(), listLSTC.get(i).getPhanUngSauTiem(),
                 listLSTC.get(i).getIDRoom()
            });
            }
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jbuttonSearchActionPerformed

    private void JbuttonShowAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JbuttonShowAllActionPerformed
        tblModel.setRowCount(0);
        setTableDate(new ClinicDAO().getAllPatient(), new ClinicDAO().getAllHistoryOfVaccinations());
        // TODO add your handling code here:
    }//GEN-LAST:event_JbuttonShowAllActionPerformed

    private void jButtonThemLSTCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonThemLSTCActionPerformed
        new FrameThemLichSuTiemChung().setVisible(true);
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonThemLSTCActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(FrameLichSuTiemChung.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(FrameLichSuTiemChung.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(FrameLichSuTiemChung.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(FrameLichSuTiemChung.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new FrameLichSuTiemChung().setVisible(true);
//            }
//        });
//    }
private void setTableDate(ArrayList<Patient> listPatient, ArrayList<HistoryOfVaccination> listLSTC){
    ArrayList<Patient> listPatientByLSTC = new ArrayList<>();
        for (int i = 0; i < listLSTC.size(); i++) {
            for (int j = 0; j < listPatient.size(); j++) {
                if (listPatient.get(j).getID() == listLSTC.get(i).getIDPatient()) {
                    listPatientByLSTC.add(listPatient.get(j));
                }

            }
        }

        tblModel = (DefaultTableModel) jTableLSTC.getModel();
        for (int i = 0; i < listLSTC.size(); i++) {
            tblModel.addRow(new Object[]{listLSTC.get(i).getID(), listLSTC.get(i).getInjectionDate(), listLSTC.get(i).getKindOfVaccin(),
                listLSTC.get(i).getSoLo(), listLSTC.get(i).getIDPatient(), listPatientByLSTC.get(i).getName(), listLSTC.get(i).getPhanUngSauTiem(),
                 listLSTC.get(i).getIDRoom()
            });
        }
    
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JbuttonShowAll;
    private javax.swing.JButton jButtonEdit;
    private javax.swing.JButton jButtonExit;
    private javax.swing.JButton jButtonNhacNho;
    private javax.swing.JButton jButtonThemLSTC;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableLSTC;
    private javax.swing.JTextField jTextFieldSearch;
    private javax.swing.JButton jbuttonSearch;
    // End of variables declaration//GEN-END:variables
}
